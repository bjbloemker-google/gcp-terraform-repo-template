name: 'terraform apply'

on:
  workflow_call:
    inputs:
      terraform_version:
        description: 'The version of Terraform to use.'
        type: string
        default: '1.12.0'
      working_directory:
        description: 'The directory where Terraform commands will be executed.'
        type: string
        default: '.'
      terraform_var_file:
        description: 'The name of the Terraform variable file to use.'
        type: string
        default: 'terraform.auto.tfvars'
      gcp_wif_provider:
        description: 'GCP Workload Identity Federation Provider URI.'
        type: string
        required: true
      gcp_wif_service_account:
        description: 'GCP Service Account for WIF.'
        type: string
        required: true
      gcp_terraform_state_bucket:
        description: 'The GCS bucket name for Terraform state.'
        type: string
        required: true

env:
  TF_LOG: INFO
  
permissions:
  contents: read
  id-token: write

jobs:
  terraform_apply:
    name: 'terraform apply'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # WIF
      - name: GCP Workload Identity Federation Connection
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ inputs.gcp_wif_provider }}
          service_account: ${{ inputs.gcp_wif_service_account }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Init
        id: init
        working-directory: ${{ inputs.working_directory }}
        run: |
          terraform init -backend-config="bucket=${{ inputs.gcp_terraform_state_bucket }}"

      - name: Terraform Apply
        working-directory: ${{ inputs.working_directory }}
        run: terraform apply -var-file=${{ inputs.terraform_var_file }} -auto-approve
